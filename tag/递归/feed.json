{
    "version": "https://jsonfeed.org/version/1",
    "title": "AlphonseKino • All posts by \"递归\" tag",
    "description": "",
    "home_page_url": "https://alphonse-Kino.github.io",
    "items": [
        {
            "id": "https://alphonse-kino.github.io/2021/07/07/06.%E9%80%92%E5%BD%92/",
            "url": "https://alphonse-kino.github.io/2021/07/07/06.%E9%80%92%E5%BD%92/",
            "title": "递归",
            "date_published": "2021-07-07T14:09:36.962Z",
            "content_html": "<h3 id=\"递归-Recursion\"><a href=\"#递归-Recursion\" class=\"headerlink\" title=\"递归(Recursion)\"></a>递归(Recursion)</h3><h4 id=\"递归的概念\"><a href=\"#递归的概念\" class=\"headerlink\" title=\"递归的概念\"></a>递归的概念</h4><p>递归就是方法自己调用自己,每次调用时传入不同的变量**.**<strong>递归有助于编程者解决复杂的问题</strong>,同时可以让代码变得简洁。</p>\n<h3 id=\"递归的调用机制\"><a href=\"#递归的调用机制\" class=\"headerlink\" title=\"递归的调用机制\"></a>递归的调用机制</h3><p><a href=\"https://imgtu.com/i/R7ETeJ\"><img src=\"https://z3.ax1x.com/2021/07/06/R7ETeJ.png\" alt=\"R7ETeJ.png\"></a></p>\n<h4 id=\"代码演示\"><a href=\"#代码演示\" class=\"headerlink\" title=\"代码演示\"></a>代码演示</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> demo1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RecursionTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> i = factorial(<span class=\"number\">3</span>);</span><br><span class=\"line\">        System.out.println(i);</span><br><span class=\"line\">        test(<span class=\"number\">4</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//递归</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">test</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n &gt; <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">            test(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;n=&quot;</span> + n);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//阶乘</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">factorial</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> factorial(n - <span class=\"number\">1</span>) * n;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"递归的用途\"><a href=\"#递归的用途\" class=\"headerlink\" title=\"递归的用途\"></a>递归的用途</h3><ul>\n<li><p>各种数学问题如: 8皇后问题 , 汉诺塔, 阶乘问题, 迷宫问题, 球和篮子的问题(google编程大赛)</p>\n</li>\n<li><p>各种算法中也会使用到递归，比如快排，归并排序，二分查找，分治算法等.</p>\n</li>\n<li><p>将用栈解决的问题–&gt;第归代码比较简洁</p>\n</li>\n</ul>\n<h3 id=\"递归遵守的规则\"><a href=\"#递归遵守的规则\" class=\"headerlink\" title=\"递归遵守的规则\"></a>递归遵守的规则</h3><ul>\n<li>执行一个方法时，就创建一个新的受保护的独立空间(栈空间)</li>\n<li>方法的局部变量是独立的，不会相互影响, 比如n变量</li>\n<li>如果方法中使用的是引用类型变量(比如数组)，就会共享该引用类型的数据.</li>\n<li>递归必须向退出递归的条件逼近，否则就是无限递归,出现StackOverflowError，死龟了:)</li>\n<li>当一个方法执行完毕，或者遇到return，就会返回，遵守谁调用，就将结果返回给谁，同时当方法执行完毕或者返回时，该方法也就执行完毕。</li>\n</ul>\n<h3 id=\"递归的案例\"><a href=\"#递归的案例\" class=\"headerlink\" title=\"递归的案例\"></a>递归的案例</h3><h4 id=\"迷宫问题\"><a href=\"#迷宫问题\" class=\"headerlink\" title=\"迷宫问题\"></a>迷宫问题</h4><h5 id=\"问题介绍\"><a href=\"#问题介绍\" class=\"headerlink\" title=\"问题介绍\"></a>问题介绍</h5><p><a href=\"https://imgtu.com/i/R7ELJx\"><img src=\"https://z3.ax1x.com/2021/07/06/R7ELJx.png\" alt=\"R7ELJx.png\"></a></p>\n<h5 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> demo2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//迷宫问题</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MiGong</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//先创建一个二维数组</span></span><br><span class=\"line\">        <span class=\"comment\">//模拟地图</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] map = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">8</span>][<span class=\"number\">7</span>];</span><br><span class=\"line\">        <span class=\"comment\">//使用 1 表示墙</span></span><br><span class=\"line\">        <span class=\"comment\">//上下全部置为 1</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">7</span>; i++) &#123;</span><br><span class=\"line\">            map[<span class=\"number\">0</span>][i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">            map[<span class=\"number\">7</span>][i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//左右全部置为 1</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">8</span>; i++) &#123;</span><br><span class=\"line\">            map[i][<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">            map[i][<span class=\"number\">6</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//设置挡板  用 1 表示</span></span><br><span class=\"line\">        map[<span class=\"number\">3</span>][<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        map[<span class=\"number\">3</span>][<span class=\"number\">2</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        map[<span class=\"number\">6</span>][<span class=\"number\">4</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"comment\">//输出地图</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;地图情况&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">8</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">7</span>; j++) &#123;</span><br><span class=\"line\">                System.out.print(map[i][j] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//使用递归回溯给小球找路</span></span><br><span class=\"line\"></span><br><span class=\"line\">        setWay(map, <span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"comment\">//输出新的地图，小球走过，并标识过的地图</span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;小球走过，并标识过的地图&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">8</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">7</span>; j++) &#123;</span><br><span class=\"line\">                System.out.print(map[i][j] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//使用递归回溯来给小球找路</span></span><br><span class=\"line\">    <span class=\"comment\">//1、 map 表示地图</span></span><br><span class=\"line\">    <span class=\"comment\">//2、 i,j 表示哪个位置开始出发(1,1)</span></span><br><span class=\"line\">    <span class=\"comment\">//3、 如果小球能到map[6][5] 位置，则说明通路找到了</span></span><br><span class=\"line\">    <span class=\"comment\">//4、 当map[i][j] 为 0 时表示该点没有走，为 1 时表示墙；2 表示通路可以走，3 表示已经走了 但是走不通</span></span><br><span class=\"line\">    <span class=\"comment\">//5、 在走迷宫时，需要确定一个策略（方法） 下 -&gt; 右 -&gt; 上 -&gt; 左，如果该点走不通，在回溯</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> map 表示地图</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> i   从哪个位置开始找</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> j</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 如果找到通路，就返回true，否则返回false</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">setWay</span><span class=\"params\">(<span class=\"keyword\">int</span>[][] map, <span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> j)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (map[<span class=\"number\">6</span>][<span class=\"number\">5</span>] == <span class=\"number\">2</span>) &#123;<span class=\"comment\">//表示通路已经找到</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (map[i][j] == <span class=\"number\">0</span>) &#123;<span class=\"comment\">//如果该点没有走过</span></span><br><span class=\"line\">                <span class=\"comment\">//按照策略走 下 -&gt; 右 -&gt; 上 -&gt; 左</span></span><br><span class=\"line\">                map[i][j] = <span class=\"number\">2</span>;<span class=\"comment\">//假定该点可以走通</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (setWay(map, i + <span class=\"number\">1</span>, j)) &#123;<span class=\"comment\">//向下走</span></span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (setWay(map, i, j + <span class=\"number\">1</span>)) &#123;<span class=\"comment\">//向右走</span></span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (setWay(map, i - <span class=\"number\">1</span>, j)) &#123;<span class=\"comment\">//向上走</span></span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (setWay(map, i, j - <span class=\"number\">1</span>)) &#123;<span class=\"comment\">//向左走</span></span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//说明该点走不通，是死路</span></span><br><span class=\"line\">                    map[i][j] = <span class=\"number\">3</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;<span class=\"comment\">//如果map[i][j] != 0,可能是1,2,3</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"八皇后问题\"><a href=\"#八皇后问题\" class=\"headerlink\" title=\"八皇后问题\"></a>八皇后问题</h4><h5 id=\"问题介绍-1\"><a href=\"#问题介绍-1\" class=\"headerlink\" title=\"问题介绍\"></a>问题介绍</h5><p><a href=\"https://imgtu.com/i/R7ExyD\"><img src=\"https://z3.ax1x.com/2021/07/06/R7ExyD.png\" alt=\"R7ExyD.png\"></a></p>\n<h5 id=\"算法分析\"><a href=\"#算法分析\" class=\"headerlink\" title=\"算法分析\"></a>算法分析</h5><ol>\n<li><p>第一个皇后先放第一行第一列</p>\n</li>\n<li><p>第二个皇后放在第二行第一列、然后判断是否OK[即判断是冲突]， 如果不OK，继续放在第二列、第三列、依次把所有列都放完，找到一个合适</p>\n</li>\n<li><p> 继续第三个皇后，还是第一列、第二列……直到第8个皇后也能放在一个不冲突的位置，算是找到了一个正确解</p>\n</li>\n<li><p> 当得到一个正确解时，在栈回退到上一个栈时，就会开始回溯，即将第一个皇后，放到第一列的所有正确解，全部得到.</p>\n</li>\n<li><p>然后回头继续第一个皇后放第二列，后面继续循环执行 1,2,3,4的步骤</p>\n</li>\n</ol>\n<h5 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h5><p>理论上应该创建一个二维数组来表示棋盘，但是实际上可以通过算法，用一个一维数组即可解决问题. arr[8] = {0 , 4, 7, 5, 2, 6, 1, 3} //对应arr 下标 表示第几行，即第几个皇后，arr[i] = val , val 表示第i+1个皇后，放在第i+1行的第val+1列</p>\n<h5 id=\"代码演示-1\"><a href=\"#代码演示-1\" class=\"headerlink\" title=\"代码演示\"></a>代码演示</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> demo3;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//八皇后问题</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Queue</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//先定义一个max，表示共有多少个皇后</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> max=<span class=\"number\">8</span>;</span><br><span class=\"line\">    <span class=\"comment\">//定义数组array，保存皇后放置位置的结果，比如arr = &#123;0,4,7,5,2,6,1,3&#125;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] array = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[max];</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> count=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//测试</span></span><br><span class=\"line\">        Queue queue = <span class=\"keyword\">new</span> Queue();</span><br><span class=\"line\">        queue.check(<span class=\"number\">0</span>);</span><br><span class=\"line\">        System.out.printf(<span class=\"string\">&quot;一共有%d种解法&quot;</span>,count);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//编写一个方法，放置第n个皇后</span></span><br><span class=\"line\">    <span class=\"comment\">//特别注意：check 是 每一次递归时，进入到check都有 for (int i = 0; i &lt; max; i++)，因此会有回溯</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">check</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n == max)&#123;<span class=\"comment\">//n=8,其实八个皇后已然放好了</span></span><br><span class=\"line\">            print();</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//依次放入皇后，并判断是否冲突</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; max; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//先把当前这个皇后n,放到该行的第一列</span></span><br><span class=\"line\">            array[n]=i;</span><br><span class=\"line\">            <span class=\"comment\">//判断当放置第n个皇后到i列时，是否冲突</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(judge(n))&#123;</span><br><span class=\"line\">                <span class=\"comment\">//接着放置n+1个皇后，开始递归</span></span><br><span class=\"line\">                check(n+<span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//如果冲突，就继续执行array[n] = i;即将第n个皇后，放置在本行的后移一个位置</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//查看当我们放置第n个皇后时，就去检测该皇后是否和前面已经摆放的皇后冲突</span></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> n 表示第n皇后</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> <span class=\"title\">judge</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//1.array[i]==array[n]  表示判断 第n个皇后是否和前面的n-1个皇后在同一列</span></span><br><span class=\"line\">            <span class=\"comment\">//2.Math.abs(n-i)==Math.abs(array[n]-array[i])  表示判断第n个皇后是否和第i个皇后在同一斜线上</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(array[i]==array[n] || Math.abs(n-i)==Math.abs(array[n]-array[i]))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//写一个方法，可以将皇后摆放的位置输出</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        count++;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; array.length; i++) &#123;</span><br><span class=\"line\">            System.out.print(array[i]+<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n",
            "tags": [
                "算法与数据结构",
                "递归"
            ]
        }
    ]
}