{
    "version": "https://jsonfeed.org/version/1",
    "title": "Alphonse-Kino • All posts by \"线索化二叉树\" tag",
    "description": "",
    "home_page_url": "https://alphonse-Kino.github.io",
    "items": [
        {
            "id": "https://alphonse-kino.github.io/2021/07/08/10.%E6%A0%91%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80%E9%83%A8%E5%88%86/",
            "url": "https://alphonse-kino.github.io/2021/07/08/10.%E6%A0%91%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80%E9%83%A8%E5%88%86/",
            "title": "树结构基础部分",
            "date_published": "2021-07-08T13:57:20.817Z",
            "content_html": "<h1 id=\"树\"><a class=\"markdownIt-Anchor\" href=\"#树\">#</a> 树</h1>\n<h2 id=\"三种存储方式的比较\"><a class=\"markdownIt-Anchor\" href=\"#三种存储方式的比较\">#</a> 三种存储方式的比较</h2>\n<ul>\n<li>数组存储方式分析\n<ul>\n<li>优点：通过下标方式访问元素，速度快。<strong>对于有序数组</strong>，还可使用二分查找提高检索速度。</li>\n<li>缺点：如果要检索具体某个值，或者插入值 (按一定顺序)<strong> 会整体移动</strong>，效率较低</li>\n</ul>\n</li>\n<li>链表存储方式分析\n<ul>\n<li>优点：在一定程度上对数组存储方式有优化 (比如：插入一个数值节点，只需要将插入节点，链接到链表中即可， 删除效率也很好)</li>\n<li>缺点：在进行检索时，效率仍然较低，比如 (检索某个值，需要从头节点开始遍历)</li>\n</ul>\n</li>\n<li>树的存储方式分析\n<ul>\n<li>能提高数据<strong>存储，读取</strong>的效率，比如利用 <strong>二叉排序树</strong> (Binary Sort Tree)，既可以保证数据的检索速度，同时也可以保证数据的插入，删除，修改的速度。</li>\n</ul>\n</li>\n</ul>\n<p><a href=\"https://imgtu.com/i/R7mZ6K\"><img src=\"https://z3.ax1x.com/2021/07/06/R7mZ6K.png\" alt=\"R7mZ6K.png\"></a></p>\n<h2 id=\"树的示意图\"><a class=\"markdownIt-Anchor\" href=\"#树的示意图\">#</a> 树的示意图</h2>\n<p><a href=\"https://imgtu.com/i/R7mu0e\"><img src=\"https://z3.ax1x.com/2021/07/06/R7mu0e.png\" alt=\"R7mu0e.png\"></a></p>\n<h2 id=\"树的常用术语\"><a class=\"markdownIt-Anchor\" href=\"#树的常用术语\">#</a> 树的常用术语</h2>\n<ol>\n<li>节点</li>\n<li>根节点（root 节点）</li>\n<li>父节点</li>\n<li>子节点</li>\n<li>叶子节点（没有子节点的节点）</li>\n<li>节点的权（节点值）</li>\n<li>路径（从 root 节点找到该节点的路线）</li>\n<li>层</li>\n<li>子树</li>\n<li>树的高度（最大层数）</li>\n<li>森林：多棵子树构成森林</li>\n</ol>\n<h1 id=\"二叉树\"><a class=\"markdownIt-Anchor\" href=\"#二叉树\">#</a> 二叉树</h1>\n<h2 id=\"二叉树的概念\"><a class=\"markdownIt-Anchor\" href=\"#二叉树的概念\">#</a> 二叉树的概念</h2>\n<ol>\n<li>树的种类有很多，每个节点<strong>最多只能有两个子节点</strong>的<strong>一种</strong>形式称为<strong>二叉树</strong></li>\n<li>二叉树的子节点分为左节点和右节点</li>\n<li>如果该二叉树的所有叶子节点都在最后一层，并且结点总数 = 2^n -1 , n 为层数，则我们称为满二叉树。</li>\n<li><a href=\"https://imgtu.com/i/R7mQkd\"><img src=\"https://z3.ax1x.com/2021/07/06/R7mQkd.png\" alt=\"R7mQkd.png\"></a></li>\n<li>如果该二叉树的所有叶子节点都在最后一层或者倒数第二层，而且最后一层的叶子节点在左边连续，倒数第二层的叶子节点在右边连续，我们成为完全二叉树</li>\n<li><a href=\"https://imgtu.com/i/R7m1fI\"><img src=\"https://z3.ax1x.com/2021/07/06/R7m1fI.png\" alt=\"R7m1fI.png\"></a></li>\n</ol>\n<h2 id=\"二叉树的遍历\"><a class=\"markdownIt-Anchor\" href=\"#二叉树的遍历\">#</a> 二叉树的遍历</h2>\n<ul>\n<li>\n<p>前序遍历：先输出父节点，再遍历左子树和右子树</p>\n</li>\n<li>\n<p>中序遍历：先遍历左子树，再输出父节点，再遍历右子树</p>\n</li>\n<li>\n<p>后序遍历：先遍历左子树，再遍历右子树，最后输出父节点</p>\n</li>\n<li>\n<p>小结：看输出父节点的顺序，就确定是前序，中序还是后序</p>\n</li>\n</ul>\n<p><a href=\"https://imgtu.com/i/R7mJ6f\"><img src=\"https://z3.ax1x.com/2021/07/06/R7mJ6f.png\" alt=\"R7mJ6f.png\"></a></p>\n<h3 id=\"代码展示\"><a class=\"markdownIt-Anchor\" href=\"#代码展示\">#</a> 代码展示</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> demo01;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BinaryTreeDemo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//先创建一棵二叉树</span></span><br><span class=\"line\">        BinaryTree binaryTree=<span class=\"keyword\">new</span> BinaryTree();</span><br><span class=\"line\">        <span class=\"comment\">//创建需要的节点</span></span><br><span class=\"line\">        HeroNode root=<span class=\"keyword\">new</span> HeroNode(<span class=\"number\">1</span>,<span class=\"string\">&quot;zoffy&quot;</span>);</span><br><span class=\"line\">        HeroNode node2=<span class=\"keyword\">new</span> HeroNode(<span class=\"number\">2</span>,<span class=\"string\">&quot;man&quot;</span>);</span><br><span class=\"line\">        HeroNode node3=<span class=\"keyword\">new</span> HeroNode(<span class=\"number\">3</span>,<span class=\"string\">&quot;taro&quot;</span>);</span><br><span class=\"line\">        HeroNode node4=<span class=\"keyword\">new</span> HeroNode(<span class=\"number\">4</span>,<span class=\"string\">&quot;taiga&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//先手动创建该二叉树，后面学习递归方式创建二叉树</span></span><br><span class=\"line\">        root.setLeft(node2);</span><br><span class=\"line\">        root.setRight(node3);</span><br><span class=\"line\">        node3.setRight(node4);</span><br><span class=\"line\">        binaryTree.setRoot(root);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//测试</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;前序遍历&quot;</span>);</span><br><span class=\"line\">        binaryTree.preOrder();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;中序遍历&quot;</span>);</span><br><span class=\"line\">        binaryTree.infixOrder();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;后序遍历&quot;</span>);</span><br><span class=\"line\">        binaryTree.postOrder();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//定义BinaryTree 二叉树</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BinaryTree</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> HeroNode root;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setRoot</span><span class=\"params\">(HeroNode root)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.root=root;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//前序遍历</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">preOrder</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.root!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.root.preOrder();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;二叉树为null，无法遍历&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//中序遍历</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">infixOrder</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.root!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.root.infixOrder();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;二叉树为null，无法遍历&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//后序遍历</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">postOrder</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.root!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.root.postOrder();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;二叉树为null，无法遍历&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建HeroNode 节点</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HeroNode</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> no;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> HeroNode left;  <span class=\"comment\">//默认为null</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> HeroNode right; <span class=\"comment\">//默认为null</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">HeroNode</span><span class=\"params\">(<span class=\"keyword\">int</span> no, String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.no = no;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getNo</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> no;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setNo</span><span class=\"params\">(<span class=\"keyword\">int</span> no)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.no = no;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> HeroNode <span class=\"title\">getLeft</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setLeft</span><span class=\"params\">(HeroNode left)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.left = left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> HeroNode <span class=\"title\">getRight</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> right;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setRight</span><span class=\"params\">(HeroNode right)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.right = right;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;HeroNode &#123; no=&quot;</span> + no + <span class=\"string\">&quot;, name=&quot;</span> + name + <span class=\"string\">&quot;&#125;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//编写前序遍历的方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">preOrder</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"keyword\">this</span>);<span class=\"comment\">//先输出根节点</span></span><br><span class=\"line\">        <span class=\"comment\">//递归向左子树前序遍历</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.left!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.left.preOrder();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//递归向右子树前序遍历</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.right!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.right.preOrder();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//中序遍历</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">infixOrder</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//先递归向左子树中序遍历</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.left!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.left.infixOrder();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//然后输出根节点</span></span><br><span class=\"line\">        System.out.println(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        <span class=\"comment\">//递归向右子树中序遍历</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.right!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.right.infixOrder();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//后序遍历</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">postOrder</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//先递归向左子树中序遍历</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.left!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.left.postOrder();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//然后递归向右子树中序遍历</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.right!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.right.postOrder();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//最后输出根节点</span></span><br><span class=\"line\">        System.out.println(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"二叉树的查找\"><a class=\"markdownIt-Anchor\" href=\"#二叉树的查找\">#</a> 二叉树的查找</h2>\n<p><a href=\"https://imgtu.com/i/R7m0ts\"><img src=\"https://z3.ax1x.com/2021/07/06/R7m0ts.png\" alt=\"R7m0ts.png\"></a></p>\n<h3 id=\"代码展示-2\"><a class=\"markdownIt-Anchor\" href=\"#代码展示-2\">#</a> 代码展示</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> demo02;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BinaryTreeDemoSearch</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//先创建一棵二叉树</span></span><br><span class=\"line\">        BinaryTree binaryTree=<span class=\"keyword\">new</span> BinaryTree();</span><br><span class=\"line\">        <span class=\"comment\">//创建需要的节点</span></span><br><span class=\"line\">        HeroNode root=<span class=\"keyword\">new</span> HeroNode(<span class=\"number\">1</span>,<span class=\"string\">&quot;zoffy&quot;</span>);</span><br><span class=\"line\">        HeroNode node2=<span class=\"keyword\">new</span> HeroNode(<span class=\"number\">2</span>,<span class=\"string\">&quot;man&quot;</span>);</span><br><span class=\"line\">        HeroNode node3=<span class=\"keyword\">new</span> HeroNode(<span class=\"number\">3</span>,<span class=\"string\">&quot;taro&quot;</span>);</span><br><span class=\"line\">        HeroNode node4=<span class=\"keyword\">new</span> HeroNode(<span class=\"number\">4</span>,<span class=\"string\">&quot;taiga&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//先手动创建该二叉树，后面学习递归方式创建二叉树</span></span><br><span class=\"line\">        root.setLeft(node2);</span><br><span class=\"line\">        root.setRight(node3);</span><br><span class=\"line\">        node3.setRight(node4);</span><br><span class=\"line\">        binaryTree.setRoot(root);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//查找</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;前序查找&quot;</span>);</span><br><span class=\"line\">        HeroNode node = binaryTree.preOrderSearch(<span class=\"number\">3</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (node!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            System.out.printf(<span class=\"string\">&quot;找到了，信息为no=%d,name=%s&quot;</span>,node.getNo(), node.getName());</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;没找到&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//定义BinaryTree 二叉树</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BinaryTree</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> HeroNode root;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setRoot</span><span class=\"params\">(HeroNode root)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.root=root;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//前序查找</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> HeroNode <span class=\"title\">preOrderSearch</span><span class=\"params\">(<span class=\"keyword\">int</span> no)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (root!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> root.preOrderSearch(no);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//中序查找</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> HeroNode <span class=\"title\">infixOrderSearch</span><span class=\"params\">(<span class=\"keyword\">int</span> no)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (root!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> root.infixOrderSearch(no);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//后序查找</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> HeroNode <span class=\"title\">postOrderSearch</span><span class=\"params\">(<span class=\"keyword\">int</span> no)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (root!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> root.postOrderSearch(no);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建HeroNode 节点</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HeroNode</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> no;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> HeroNode left;  <span class=\"comment\">//默认为null</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> HeroNode right; <span class=\"comment\">//默认为null</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">HeroNode</span><span class=\"params\">(<span class=\"keyword\">int</span> no, String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.no = no;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getNo</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> no;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setNo</span><span class=\"params\">(<span class=\"keyword\">int</span> no)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.no = no;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> HeroNode <span class=\"title\">getLeft</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setLeft</span><span class=\"params\">(HeroNode left)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.left = left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> HeroNode <span class=\"title\">getRight</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> right;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setRight</span><span class=\"params\">(HeroNode right)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.right = right;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;HeroNode &#123; no=&quot;</span> + no + <span class=\"string\">&quot;, name=&quot;</span> + name + <span class=\"string\">&quot;&#125;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//前序遍历查找</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> no    查找no</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span>      如果找到就返回该Node，如果没有找到就返回 null</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> HeroNode <span class=\"title\">preOrderSearch</span><span class=\"params\">(<span class=\"keyword\">int</span> no)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//比较当前节点是不是要查找的节点</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.no==no)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//1.判断当前节点的左子节点是否为 null，如果不为 null，则递归前序查找</span></span><br><span class=\"line\">        <span class=\"comment\">//2.如果左递归前序查找，找到节点，则返回</span></span><br><span class=\"line\">        HeroNode resNode = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.left!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            resNode=<span class=\"keyword\">this</span>.left.preOrderSearch(no);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (resNode!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//说明找到了</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> resNode;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//1.左递归前序查找，找到节点，则返回，否则继续判断</span></span><br><span class=\"line\">        <span class=\"comment\">//2.当前的节点的右子节点是否为null，如果不为 null，则继续向右递归前序查找</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.right!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            resNode=<span class=\"keyword\">this</span>.right.preOrderSearch(no);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> resNode;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//中序遍历查找</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> HeroNode <span class=\"title\">infixOrderSearch</span><span class=\"params\">(<span class=\"keyword\">int</span> no)</span></span>&#123;</span><br><span class=\"line\">        HeroNode resNode = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"comment\">//判断当前节点的左子节点是否为null，如果不为null，则递归中序查找</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.left!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            resNode=<span class=\"keyword\">this</span>.left.infixOrderSearch(no);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (resNode!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//说明找到了</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> resNode;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//如果找到，就返回，如果没找到就和当前节点比较，如果是则返回当前节点</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.no==no)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//否则继续进行右递归的中序查找</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.right!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            resNode=<span class=\"keyword\">this</span>.right.infixOrderSearch(no);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> resNode;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//后序遍历查找</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> HeroNode <span class=\"title\">postOrderSearch</span><span class=\"params\">(<span class=\"keyword\">int</span> no)</span></span>&#123;</span><br><span class=\"line\">        HeroNode resNode = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"comment\">//判断当前节点的左子节点是否为null，如果不为null，则递归后序查找</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.left!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            resNode=<span class=\"keyword\">this</span>.left.postOrderSearch(no);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (resNode!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//说明在左子树找到</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> resNode;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//如果左子树没有找到，就向右递归进行后序遍历查找</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.right!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            resNode=<span class=\"keyword\">this</span>.right.postOrderSearch(no);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//如果左右子树都没有找到，就比较当前节点是不是</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.no==no)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> resNode;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"二叉树的删除\"><a class=\"markdownIt-Anchor\" href=\"#二叉树的删除\">#</a> 二叉树的删除</h2>\n<p><a href=\"https://imgtu.com/i/R7ms10\"><img src=\"https://z3.ax1x.com/2021/07/06/R7ms10.png\" alt=\"R7ms10.png\"></a></p>\n<h3 id=\"代码展示-3\"><a class=\"markdownIt-Anchor\" href=\"#代码展示-3\">#</a> 代码展示</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> demo03;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BinaryTreeDemoDelete</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//先创建一棵二叉树</span></span><br><span class=\"line\">        BinaryTree binaryTree = <span class=\"keyword\">new</span> BinaryTree();</span><br><span class=\"line\">        <span class=\"comment\">//创建需要的节点</span></span><br><span class=\"line\">        HeroNode root = <span class=\"keyword\">new</span> HeroNode(<span class=\"number\">1</span>, <span class=\"string\">&quot;zoffy&quot;</span>);</span><br><span class=\"line\">        HeroNode node2 = <span class=\"keyword\">new</span> HeroNode(<span class=\"number\">2</span>, <span class=\"string\">&quot;man&quot;</span>);</span><br><span class=\"line\">        HeroNode node3 = <span class=\"keyword\">new</span> HeroNode(<span class=\"number\">3</span>, <span class=\"string\">&quot;taro&quot;</span>);</span><br><span class=\"line\">        HeroNode node4 = <span class=\"keyword\">new</span> HeroNode(<span class=\"number\">4</span>, <span class=\"string\">&quot;taiga&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//先手动创建该二叉树，后面学习递归方式创建二叉树</span></span><br><span class=\"line\">        root.setLeft(node2);</span><br><span class=\"line\">        root.setRight(node3);</span><br><span class=\"line\">        node3.setRight(node4);</span><br><span class=\"line\">        binaryTree.setRoot(root);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//测试删除</span></span><br><span class=\"line\">        binaryTree.delNode(<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//定义BinaryTree 二叉树</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BinaryTree</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> HeroNode root;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setRoot</span><span class=\"params\">(HeroNode root)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.root = root;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">delNode</span><span class=\"params\">(<span class=\"keyword\">int</span> no)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (root!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//如果只有一个root节点，这里立即判断root是不是就是要删除的节点</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (root.getNo()==no)&#123;</span><br><span class=\"line\">                root=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                root.delNode(no);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;这个树是空树，不能删除~~~&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建HeroNode 节点</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HeroNode</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> no;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> HeroNode left;  <span class=\"comment\">//默认为null</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> HeroNode right; <span class=\"comment\">//默认为null</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">HeroNode</span><span class=\"params\">(<span class=\"keyword\">int</span> no, String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.no = no;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getNo</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> no;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setNo</span><span class=\"params\">(<span class=\"keyword\">int</span> no)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.no = no;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> HeroNode <span class=\"title\">getLeft</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setLeft</span><span class=\"params\">(HeroNode left)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.left = left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> HeroNode <span class=\"title\">getRight</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> right;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setRight</span><span class=\"params\">(HeroNode right)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.right = right;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;HeroNode &#123; no=&quot;</span> + no + <span class=\"string\">&quot;, name=&quot;</span> + name + <span class=\"string\">&quot;&#125;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//递归删除节点</span></span><br><span class=\"line\">    <span class=\"comment\">//1.如果删除的节点是叶子节点，则删除该节点</span></span><br><span class=\"line\">    <span class=\"comment\">//2.如归删除的节点是非叶子节点，则删除该子树</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">delNode</span><span class=\"params\">(<span class=\"keyword\">int</span> no)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 思路：</span></span><br><span class=\"line\"><span class=\"comment\">         * 1.因为我们的二叉树是单向的，所以我们是判断当前节点的子节点是否需要删除节点，而不能去判断当前这个节点是不是需要删除节点</span></span><br><span class=\"line\"><span class=\"comment\">         * 2.如果当前节点的左子节点不为空，而且左子节点就是要删除节点，就将this.left = null；并且就返回（结束递归删除）</span></span><br><span class=\"line\"><span class=\"comment\">         * 3.如果当前节点的右子节点不为空，并且右子节点就是要删除节点，就将this.right= null；并且就返回（结束递归删除）</span></span><br><span class=\"line\"><span class=\"comment\">         * 4.如果第2步和第3步没有删除节点，那么我们就需要向左子树进行递归删除</span></span><br><span class=\"line\"><span class=\"comment\">         * 5.如果第4步也没有删除节点应当向右子树进行递归删除</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"comment\">//2.如果当前节点的左子节点不为空，而且左子节点就是要删除节点，就将this.left = null；并且就返回（结束递归删除）</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.left != <span class=\"keyword\">null</span> &amp;&amp; <span class=\"keyword\">this</span>.left.no == no) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.left = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//3.如果当前节点的右子节点不为空，并且右子节点就是要删除节点，就将this.right= null；并且就返回（结束递归删除）</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.right != <span class=\"keyword\">null</span> &amp;&amp; <span class=\"keyword\">this</span>.right.no == no) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.right = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//4.向左子树进行递归删除</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.left!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.left.delNode(no);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//5.向右子树进行递归删除</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.right!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.right.delNode(no);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"顺序存储二叉树\"><a class=\"markdownIt-Anchor\" href=\"#顺序存储二叉树\">#</a> 顺序存储二叉树</h1>\n<h2 id=\"基本介绍\"><a class=\"markdownIt-Anchor\" href=\"#基本介绍\">#</a> 基本介绍</h2>\n<p>从数据存储来看，<strong>数组存储方式</strong>和<strong>树</strong>的存储方式可以相互转换，即数组可以转换成树，树也可以转换成数组，如下面所示。</p>\n<p><a href=\"https://imgtu.com/i/R7m2BF\"><img src=\"https://z3.ax1x.com/2021/07/06/R7m2BF.png\" alt=\"R7m2BF.png\"></a></p>\n<ul>\n<li>\n<p>顺序二叉树通常只考虑完全二叉树</p>\n</li>\n<li>\n<p>第 n 个元素的左子节点为 2 * n + 1</p>\n</li>\n<li>\n<p>第 n 个元素的右子节点为 2 * n + 2</p>\n</li>\n<li>\n<p>第 n 个元素的父节点为 (n-1) / 2</p>\n</li>\n<li>\n<p>n : 表示二叉树中的第几个元素 (按 0 开始编号 如上图所示)</p>\n</li>\n</ul>\n<h2 id=\"代码展示-4\"><a class=\"markdownIt-Anchor\" href=\"#代码展示-4\">#</a> 代码展示</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> demo04;</span><br><span class=\"line\"><span class=\"comment\">//顺序存储二叉树的前、中、后序遍历</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ArrayBinaryTreeDemo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>&#125;;</span><br><span class=\"line\">        <span class=\"comment\">//创建一个ArrBinaryTree</span></span><br><span class=\"line\">        ArrayBinaryTree binaryTree=<span class=\"keyword\">new</span> ArrayBinaryTree(arr);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;前序遍历&quot;</span>);</span><br><span class=\"line\">        binaryTree.preOrder();</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;中序遍历&quot;</span>);</span><br><span class=\"line\">        binaryTree.infixOrder();</span><br><span class=\"line\">        System.out.println();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;后序遍历&quot;</span>);</span><br><span class=\"line\">        binaryTree.postOrder();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//编写一个ArrayBinaryTree，实现顺序存储二叉树遍历</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ArrayBinaryTree</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] arr;<span class=\"comment\">//存储数据节点的数组</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ArrayBinaryTree</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.arr = arr;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//重载 preOrder</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">preOrder</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.preOrder(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//重载 infixOrder</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">infixOrder</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.infixOrder(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//重载 postOrder</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">postOrder</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.postOrder(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//编写一个方法，完成顺序存储二叉树的前序遍历</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> index 数组下标</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">preOrder</span><span class=\"params\">(<span class=\"keyword\">int</span> index)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//如果数组为空，或者 arr.length == 0;</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr == <span class=\"keyword\">null</span> || arr.length == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;数组为空，无法进行二叉树的前序遍历&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//输出当前这个元素</span></span><br><span class=\"line\">        System.out.print(arr[index]);</span><br><span class=\"line\">        <span class=\"comment\">//向左遍历递归</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (index * <span class=\"number\">2</span> + <span class=\"number\">1</span> &lt; arr.length) &#123;</span><br><span class=\"line\">            preOrder(<span class=\"number\">2</span> * index + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//向右遍历递归</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (index * <span class=\"number\">2</span> + <span class=\"number\">2</span> &lt; arr.length) &#123;</span><br><span class=\"line\">            preOrder(<span class=\"number\">2</span> * index + <span class=\"number\">2</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//编写一个方法，完成顺序存储二叉树的中序遍历</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> index 数组下标</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">infixOrder</span><span class=\"params\">(<span class=\"keyword\">int</span> index)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//如果数组为空，或者 arr.length == 0;</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr == <span class=\"keyword\">null</span> || arr.length == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;数组为空，无法进行二叉树的中序遍历&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//向左遍历递归</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (index * <span class=\"number\">2</span> + <span class=\"number\">1</span> &lt; arr.length) &#123;</span><br><span class=\"line\">            infixOrder(<span class=\"number\">2</span> * index + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//输出当前这个元素</span></span><br><span class=\"line\">        System.out.print(arr[index]);</span><br><span class=\"line\">        <span class=\"comment\">//向右遍历递归</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (index * <span class=\"number\">2</span> + <span class=\"number\">2</span> &lt; arr.length) &#123;</span><br><span class=\"line\">            infixOrder(<span class=\"number\">2</span> * index + <span class=\"number\">2</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//编写一个方法，完成顺序存储二叉树的后序遍历</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> index 数组下标</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">postOrder</span><span class=\"params\">(<span class=\"keyword\">int</span> index)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//如果数组为空，或者 arr.length == 0;</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arr == <span class=\"keyword\">null</span> || arr.length == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;数组为空，无法进行二叉树的后序遍历&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//向左遍历递归</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (index * <span class=\"number\">2</span> + <span class=\"number\">1</span> &lt; arr.length) &#123;</span><br><span class=\"line\">            postOrder(<span class=\"number\">2</span> * index + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//向右遍历递归</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (index * <span class=\"number\">2</span> + <span class=\"number\">2</span> &lt; arr.length) &#123;</span><br><span class=\"line\">            postOrder(<span class=\"number\">2</span> * index + <span class=\"number\">2</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//输出当前这个元素</span></span><br><span class=\"line\">        System.out.print(arr[index]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;\t</span><br></pre></td></tr></table></figure>\n<h1 id=\"线索化二叉树\"><a class=\"markdownIt-Anchor\" href=\"#线索化二叉树\">#</a> 线索化二叉树</h1>\n<h2 id=\"基本介绍-2\"><a class=\"markdownIt-Anchor\" href=\"#基本介绍-2\">#</a> 基本介绍</h2>\n<ul>\n<li>\n<p>n 个结点的二叉链表中含有 n+1 【公式 2n-(n-1)=n+1】 个空指针域。利用二叉链表中的空指针域，存放指向<strong>该</strong><a href=\"\">结点</a>) 在<strong>某种遍历次序</strong>下的前驱和后继结点的指针（这种附加的指针称为 &quot;线索&quot;）</p>\n</li>\n<li>\n<p>这种加上了线索的二叉链表 称为<strong>线索链表</strong>，相应的二叉树称为<strong>线索二叉树 (Threaded BinaryTree)</strong>。根据线索性质的不同，线索二叉树可分为<strong>前序线索二叉树、中序线索二叉树和后序线索二叉树</strong>三种</p>\n</li>\n<li>\n<p>一个结点的前一个结点，称为<strong>前驱</strong>结点</p>\n</li>\n<li>\n<p>一个结点的后一个结点，称为<strong>后继</strong>结点</p>\n</li>\n</ul>\n<p><a href=\"https://imgtu.com/i/R7m4hR\"><img src=\"https://z3.ax1x.com/2021/07/06/R7m4hR.png\" alt=\"R7m4hR.png\"></a></p>\n<ul>\n<li>说明：当线索化二叉树，Node 节点的属性 left 和 right，有以下两种情况：(根据上图分析)\n<ol>\n<li>left 指向的是左子树，也可能是指向的前驱节点，比如 1 号 节点 left 指向的左子树，而 10 号 节点的 left 指向的就是前驱节点</li>\n<li>right 指向的是右子树，也可能是指向后继节点， 比如 1 号 节点 right 指向的右子树，而 10 号 节点的 right 指向的是后继节点</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"代码展示-5\"><a class=\"markdownIt-Anchor\" href=\"#代码展示-5\">#</a> 代码展示</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> demo05;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ThreadedBinaryTreeDemo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建需要的节点</span></span><br><span class=\"line\">        HeroNode root = <span class=\"keyword\">new</span> HeroNode(<span class=\"number\">1</span>, <span class=\"string\">&quot;zoffy&quot;</span>);</span><br><span class=\"line\">        HeroNode node2 = <span class=\"keyword\">new</span> HeroNode(<span class=\"number\">3</span>, <span class=\"string\">&quot;man&quot;</span>);</span><br><span class=\"line\">        HeroNode node3 = <span class=\"keyword\">new</span> HeroNode(<span class=\"number\">6</span>, <span class=\"string\">&quot;taro&quot;</span>);</span><br><span class=\"line\">        HeroNode node4 = <span class=\"keyword\">new</span> HeroNode(<span class=\"number\">8</span>, <span class=\"string\">&quot;taiga&quot;</span>);</span><br><span class=\"line\">        HeroNode node5 = <span class=\"keyword\">new</span> HeroNode(<span class=\"number\">10</span>, <span class=\"string\">&quot;mebius&quot;</span>);</span><br><span class=\"line\">        HeroNode node6 = <span class=\"keyword\">new</span> HeroNode(<span class=\"number\">14</span>, <span class=\"string\">&quot;zero&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//二叉树，后面我们递归创建，现在简单处理使用手动创建</span></span><br><span class=\"line\">        root.setLeft(node2);</span><br><span class=\"line\">        root.setRight(node3);</span><br><span class=\"line\">        node2.setLeft(node4);</span><br><span class=\"line\">        node2.setRight(node5);</span><br><span class=\"line\">        node3.setLeft(node6);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//测试线索化</span></span><br><span class=\"line\">        ThreadedBinaryTree threadedBinaryTree = <span class=\"keyword\">new</span> ThreadedBinaryTree();</span><br><span class=\"line\">        threadedBinaryTree.setRoot(root);</span><br><span class=\"line\">        threadedBinaryTree.threadedNodes();</span><br><span class=\"line\"></span><br><span class=\"line\">        HeroNode left = node5.getLeft();</span><br><span class=\"line\">        System.out.println(left);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//当线索化二叉树后，不能再使用原来的方法遍历</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;使用线索化的方式遍历线索化二叉树&quot;</span>);</span><br><span class=\"line\">        threadedBinaryTree.threadedList();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//定义ThreadedBinaryTree 实现了线索化功能的二叉树</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ThreadedBinaryTree</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> HeroNode root;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//为了实现线索化，需要创建要给指向当前节点的前驱节点的指针</span></span><br><span class=\"line\">    <span class=\"comment\">//在递归进行线索化时，pre 总是保留前一个节点</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> HeroNode pre = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setRoot</span><span class=\"params\">(HeroNode root)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.root = root;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//重载threadedNodes方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">threadedNodes</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.threadedNodes(root);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//遍历线索化二叉树的方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">threadedList</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//定义一个变量，存储当前遍历的节点，从root开始</span></span><br><span class=\"line\">        HeroNode node = root;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (node != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//循环的找到leftType==1的节点，第一个找到的是8节点</span></span><br><span class=\"line\">            <span class=\"comment\">//后面随着遍历而变化，因为当leftType==1时，说明该节点是按照线索化处理后的有效节点</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (node.getLeftType() == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                node = node.getLeft();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//打印这个节点</span></span><br><span class=\"line\">            System.out.println(node);</span><br><span class=\"line\">            <span class=\"comment\">//如果当前节点的右指针指向的是后继节点，就一直输出</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (node.getRightType() == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//获取到当前节点的后继节点</span></span><br><span class=\"line\">                node = node.getRight();</span><br><span class=\"line\">                System.out.println(node);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//替换这个遍历的节点</span></span><br><span class=\"line\">            node = node.getRight();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//编写对二叉树进行中序线索化的方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">threadedNodes</span><span class=\"params\">(HeroNode node)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//如果node==null 不能线索化</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (node == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//第一步 先线索化左子树</span></span><br><span class=\"line\">        threadedNodes(node.getLeft());</span><br><span class=\"line\">        <span class=\"comment\">//第二步 线索化当前节点</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//处理当前节点的前驱节点</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (node.getLeft() == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//让当前节点的左指针指向前驱节点</span></span><br><span class=\"line\">            node.setLeft(pre);</span><br><span class=\"line\">            <span class=\"comment\">//修改当前节点的左指针的类型，指向前驱节点</span></span><br><span class=\"line\">            node.setLeftType(<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//处理后继节点</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (pre != <span class=\"keyword\">null</span> &amp;&amp; pre.getRight() == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//让前驱节点的右指针指向当前节点</span></span><br><span class=\"line\">            pre.setRight(node);</span><br><span class=\"line\">            <span class=\"comment\">//修改前驱节点的右指针类型</span></span><br><span class=\"line\">            pre.setRightType(<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//！！！！！！！！每处理一个节点后，让当前节点是下一个节点的前驱节点</span></span><br><span class=\"line\">        pre = node;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//第三步 再线索化右子树</span></span><br><span class=\"line\">        threadedNodes(node.getRight());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建HeroNode 节点</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HeroNode</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> no;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> HeroNode left;  <span class=\"comment\">//默认为null</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> HeroNode right; <span class=\"comment\">//默认为null</span></span><br><span class=\"line\">    <span class=\"comment\">//说明：</span></span><br><span class=\"line\">    <span class=\"comment\">//1.如果leftType == 0 表示指向的是左子树，如果leftType == 1 则表示指向前驱节点</span></span><br><span class=\"line\">    <span class=\"comment\">//2.如果rightType ==0 表示指向的是右子树，如果rightType == 1 表示指向后继节点</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> leftType;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> rightType;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">HeroNode</span><span class=\"params\">(<span class=\"keyword\">int</span> no, String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.no = no;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getNo</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> no;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setNo</span><span class=\"params\">(<span class=\"keyword\">int</span> no)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.no = no;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> HeroNode <span class=\"title\">getLeft</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setLeft</span><span class=\"params\">(HeroNode left)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.left = left;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> HeroNode <span class=\"title\">getRight</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> right;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setRight</span><span class=\"params\">(HeroNode right)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.right = right;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getLeftType</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> leftType;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setLeftType</span><span class=\"params\">(<span class=\"keyword\">int</span> leftType)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.leftType = leftType;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getRightType</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> rightType;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setRightType</span><span class=\"params\">(<span class=\"keyword\">int</span> rightType)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.rightType = rightType;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;HeroNode &#123; no=&quot;</span> + no + <span class=\"string\">&quot;, name=&quot;</span> + name + <span class=\"string\">&quot;&#125;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "算法与数据结构",
                "二叉树",
                "顺序存储二叉树",
                "线索化二叉树"
            ]
        }
    ]
}