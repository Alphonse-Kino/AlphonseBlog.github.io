<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://alphonse-Kino.github.io</id>
    <title>品一份静谧人生 • Posts by &#34;线性结构与非线性结构&#34; tag</title>
    <link href="https://alphonse-Kino.github.io" />
    <updated>2022-03-15T14:08:27.172Z</updated>
    <category term="线性结构与非线性结构" />
    <category term="稀疏数组" />
    <category term="队列" />
    <category term="递归" />
    <category term="线性查找" />
    <category term="二分/折半查找" />
    <category term="插值查找" />
    <category term="斐波那契查找" />
    <category term="哈希表" />
    <category term="多叉树" />
    <category term="B树" />
    <category term="B+树" />
    <category term="B×树" />
    <category term="随手记" />
    <category term="单链表" />
    <category term="双链表" />
    <category term="二叉树" />
    <category term="顺序存储二叉树" />
    <category term="线索化二叉树" />
    <category term="图" />
    <category term="深度优先算法" />
    <category term="广度优先算法" />
    <category term="栈" />
    <category term="(后缀表达式)逆波兰表达式" />
    <category term="排序算法" />
    <category term="冒泡排序" />
    <category term="时间复杂度" />
    <category term="选择排序" />
    <category term="插入排序" />
    <category term="希尔排序" />
    <category term="快速排序" />
    <category term="归并排序" />
    <category term="基数排序" />
    <category term="堆排序" />
    <category term="赫夫曼树" />
    <category term="赫夫曼编码" />
    <category term="二叉排序树" />
    <category term="平衡二叉树" />
    <category term="二分查找算法" />
    <category term="分治算法" />
    <category term="动态规划算法" />
    <category term="KMP算法" />
    <category term="贪心算法" />
    <category term="普利姆算法" />
    <category term="克鲁斯卡尔算法" />
    <category term="迪杰斯特拉算法" />
    <category term="弗洛伊德算法" />
    <category term="马踏棋盘算法" />
    <entry>
        <id>https://alphonse-kino.github.io/2022/03/15/02%E3%80%81%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%9A%84%E5%85%B3%E7%B3%BB/</id>
        <title>02、数据结构与算法的关系</title>
        <link rel="alternate" href="https://alphonse-kino.github.io/2022/03/15/02%E3%80%81%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%9A%84%E5%85%B3%E7%B3%BB/"/>
        <content type="html">&lt;h1 id=&#34;简单介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#简单介绍&#34;&gt;#&lt;/a&gt; 简单介绍&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;1、算法是程序的灵魂，优秀的程序可以在海量数据计算时，依然保持高速计算&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2、一般来讲程序会使用了内存计算框架 (比如 Spark) 和缓存技术 (比如 Redis 等) 来优化程序，再深入的思考一下，这些计算框架和缓存技术，它的核心功能是哪个部分呢？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;3、拿实际工作经历来说，在 Unix 下开发服务器程序，功能是要支持上千万人同时在线，在上线前，做内测，一切 OK, 可上线后，服务器就支撑不住了，公司的 CTO 对代码进行优化，再次上线，坚如磐石。你就能感受到程序是有灵魂的，就是算法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;4、目前程序员面试的门槛越来越高，很多一线 IT 公司 (大厂)，都会有数据结构和算法面试题 (负责的告诉你，肯定有的)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;5、如果你不想永远都是代码工人，那就花时间来研究下数据结构和算法&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;数据结构和算法的关系&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据结构和算法的关系&#34;&gt;#&lt;/a&gt; 数据结构和算法的关系&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;1、数据 data 结构 (structure) 是一门研究组织数据方式的学科，有了编程语言也就有了数据结构。学好数据结构可以&lt;br&gt;
编写出更加漂亮，更加有效率的代码。&lt;/li&gt;
&lt;li&gt;2、要学习好数据结构就要多多考虑如何将生活中遇到的问题，用程序去实现解决.&lt;/li&gt;
&lt;li&gt;3、程序 = 数据结构＋算法&lt;/li&gt;
&lt;li&gt;4、数据结构是算法的基础，换言之，想要学好算法，需要把数据结构学到位。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;线性结构和非线性结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#线性结构和非线性结构&#34;&gt;#&lt;/a&gt; 线性结构和非线性结构&lt;/h1&gt;
&lt;p&gt;数据结构包括：线性结构和非线性结构。&lt;br&gt;
1、线性结构&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1、线性结构作为最常用的数据结构，其特点是数据元素之间存在一对一的线性关系&lt;/li&gt;
&lt;li&gt;2、线性结构有两种不同的存储结构，即顺序存储结构 (数组) 和链式存储结构 (链表)。顺序存储的线性表称为顺序表，顺序表中的存储元素是连续的&lt;/li&gt;
&lt;li&gt;3、链式存储的线性表称为链表，链表中的存储元素不一定是连续的，元素节点中存放数据元素以及相邻元素的地址信息&lt;/li&gt;
&lt;li&gt;4、线性结构常见的有：数组、队列、链表和栈，后面我们会详细讲解.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2、非线性结构&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非线性结构包括：二维数组，多维数组，广义表，树结构，图结构&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="线性结构与非线性结构" />
        <updated>2022-03-15T14:08:27.172Z</updated>
    </entry>
</feed>
